openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: An paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a pet
      operationId: createPets
      tags:
        - pets
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pets"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:

    Pet:
      type: object
      discriminator:
        propertyName: _type
      required:
        - id
        - name
      properties:
        _type:
          type: string
          default: 'Pet'
          readOnly: true
        id:
          type: integer
          format: int64
          default: 0
        name:
          type: string
          default: "noname"
        available:
          type: boolean
          default: true
        price:
          type: number
          default: 1.0
        uid:
          type: string
          format: uuid
        createTime:
          type: string
          format: date-time
        owner:
          $ref: "#/components/schemas/Owner"
        color:
          $ref: "#/components/schemas/Color"


    Cat:  ## "Cat" will be used as the discriminator value
      description: A representation of a cat
      allOf:
      - $ref: '#/components/schemas/Pet'
      - type: object
        properties:
          huntingSkill:
            type: string
            description: The measured skill for hunting
            enum:
            - clueless
            - lazy
            - adventurous
            - aggressive
        required:
        - huntingSkill

    Dog:  ## "Dog" will be used as the discriminator value
      description: A representation of a dog
      allOf:
      - $ref: '#/components/schemas/Pet'
      - type: object
        properties:
          packSize:
            type: integer
            format: int32
            description: the size of the pack the dog is from
            default: 0
            minimum: 0
        required:
        - packSize

    Owner:
      properties:
        name:
          type: string

    Pets:
      type: array
      items:
        $ref: "#/components/schemas/Pet"

    Color:
      type: string
      enum:
        - Black
        - White
        - Red

    PetList:
      type: object
      required:
        - _items
      properties:
        _items:
          type: array
          items:
            $ref: "#/components/schemas/Pet"
        _max:
          type: integer
        _offset:
          type: integer

    Error:
      additionalProperties:
        type: string
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string