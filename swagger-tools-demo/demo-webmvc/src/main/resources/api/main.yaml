openapi: 3.0.1

info:
  title: Swagger Petstore
  license:
    name: MIT
  version: 1.0.0
x-model-package: "org.swaggertools.demo.model"

servers:
  - url: /v1

paths:

  /pets:
    get:
      tags:
        - pets
      summary: List all pets
      operationId: listPets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: An paged array of pets
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
    post:
      tags:
        - pets
      summary: Create a pet
      operationId: createPet
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Pet'
        required: false
      responses:
        201:
          description: Created
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Pet'

  /pets/{petId}:
    get:
      tags:
        - pets
      summary: Info for a specific pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: The id of the pet to retrieve
          required: true
          schema:
            type: integer
            format: int64
        - name: details
          in: query
          description: Include pet details
          schema:
            type: boolean
            default: false
        - name: userId
          in: header
          required: false
          schema:
            type: string
      responses:
        200:
          description: Expected response to a valid request
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Pet'
    put:
      tags:
        - pets
      summary: Update a pet
      operationId: updatePet
      parameters:
        - name: petId
          in: path
          description: The id of the pet to retrieve
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Pet'
        required: false
      responses:
        204:
          description: OK
          content: {}
    delete:
      tags:
        - pets
      summary: Info for a specific pet
      operationId: deletePetById
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: Deleted
          content: {}

  /pets/bulk:
    post:
      tags:
        - pets
      summary: Create multiple pets
      operationId: createPets
      requestBody:
        content:
          'application/json':
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Pet'
        required: true
      responses:
        200:
          description: An array of pets
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
